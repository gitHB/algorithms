def min_kicks(auditoriums):
    # Используем мемоизацию для сохранения уже вычисленных значений
    memo = {}

    def dfs(aud):
        # Если мы находимся за пределами кафедры, возвращаем 0, так как больше нет пендалей
        if aud >= len(auditoriums):
            return 0

        # Если уже рассчитали минимальное количество пендалей для этой аудитории, возвращаем сохраненное значение
        if aud in memo:
            return memo[aud]

        # Рассчитываем минимальное количество пендалей для шагов в 1, 2 или 3 аудитории
        min_kicks = auditoriums[aud] + min(
            dfs(aud + 1),
            dfs(aud + 2),
            dfs(aud + 3)
        )

        # Сохраняем результат в мемо
        memo[aud] = min_kicks
        return min_kicks

    # Студент может начинать с первой, второй или третьей аудитории
    return min(dfs(0), dfs(1), dfs(2))

# Пример входных данных
auditoriums = [4, 2, 7, 1, 3, 5, 6, 8, 2, 4]

# Вызываем функцию и выводим результат
print("Минимальное количество пендалей, которое можно собрать:", min_kicks(auditoriums))
